{
  "Train": [
    "# Data treatment\n",
    "# FeatureEngineering/PCA\n",
    "\n",
    "def pca_train(obj, x_data):\n",
    "    obj.fit(x_data)\n",
    "    return obj.transform(x_data)\n",
    "\n",
    "pca = PCA(n_components=2, svd_solver='auto')\n",
    "x_train_normalized = pca_train(pca, x_train)"
  ],
  "Valid": [
    "# Data treatment\n",
    "# FeatureEngineering/PCA\n",
    "\n",
    "def pca_valid(obj, x_data):\n",
    "    return obj.transform(x_data)\n",
    "\n",
    "x_valid_normalized = pca_valid(pca, x_val)"
  ],
  "Test": [
    "# Data treatment\n",
    "# FeatureEngineering/PCA\n",
    "\n",
    "def pca_test(obj, x_data):\n",
    "    return obj.transform(x_data)\n",
    "\n",
    "x_test_normalized = pca_test(pca, x_test)"
  ],
  "Imports": ["from sklearn.decomposition import PCA\n"]
}
